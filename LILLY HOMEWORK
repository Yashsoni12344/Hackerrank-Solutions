int countSwaps(vector<int> arr, vector<int> sortedArr) {
    int n = arr.size();
    unordered_map<int, int> indexMap;

    // Store current indices of each element
    for (int i = 0; i < n; i++) {
        indexMap[arr[i]] = i;
    }

    int swaps = 0;
    for (int i = 0; i < n; i++) {
        // if element already in correct position
        if (arr[i] != sortedArr[i]) {
            swaps++;

            // Get index of the correct element
            int correctIndex = indexMap[sortedArr[i]];

            // Update the index map after swap
            indexMap[arr[i]] = correctIndex;
            indexMap[sortedArr[i]] = i;

            // Swap elements
            swap(arr[i], arr[correctIndex]);
        }
    }

    return swaps;
}
